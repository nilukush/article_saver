{
  "permissions": {
    "allow": [
      "Bash(git push:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(chmod:*)",
      "Bash(node:*)",
      "Bash(mkdir:*)",
      "Bash(for size in 16 32 64 128 256 512 1024)",
      "Bash(do)",
      "Bash(magick:*)",
      "Bash(done)",
      "Bash(# Create Windows .ico file with multiple sizes\nmagick resources/icons/16x16.png resources/icons/32x32.png resources/icons/64x64.png resources/icons/128x128.png resources/icons/256x256.png resources/icon.ico)",
      "Bash(# Create iconset directory for macOS\nmkdir -p resources/icon.iconset\n\n# Copy and rename files according to Apple's requirements\ncp resources/icons/16x16.png resources/icon.iconset/icon_16x16.png\ncp resources/icons/32x32.png resources/icon.iconset/icon_16x16@2x.png\ncp resources/icons/32x32.png resources/icon.iconset/icon_32x32.png\ncp resources/icons/64x64.png resources/icon.iconset/icon_32x32@2x.png\ncp resources/icons/128x128.png resources/icon.iconset/icon_128x128.png\ncp resources/icons/256x256.png resources/icon.iconset/icon_128x128@2x.png\ncp resources/icons/256x256.png resources/icon.iconset/icon_256x256.png\ncp resources/icons/512x512.png resources/icon.iconset/icon_256x256@2x.png\ncp resources/icons/512x512.png resources/icon.iconset/icon_512x512.png\ncp resources/icons/1024x1024.png resources/icon.iconset/icon_512x512@2x.png\n\n# Create the icns file\niconutil -c icns resources/icon.iconset -o resources/icon.icns\n\n# Clean up\nrm -rf resources/icon.iconset)",
      "Bash(# Create a 512x512 PNG for GitHub OAuth\ncp resources/icons/512x512.png resources/github-oauth-logo.png\n\n# Also create one in public directory for easy access\ncp resources/icons/512x512.png public/logo-512.png\n\necho \"‚úÖ Icons generated successfully!\"\necho \"üìÅ Icon locations:\"\necho \"  - Windows: resources/icon.ico\"\necho \"  - macOS: resources/icon.icns\"\necho \"  - Linux: resources/icons/256x256.png\"\necho \"  - GitHub OAuth: resources/github-oauth-logo.png\")",
      "Bash(npm install:*)",
      "Bash(rm:*)",
      "Bash(rg:*)",
      "Bash(npx prisma:*)",
      "Bash(npx tsc:*)",
      "Bash(npx ts-node:*)",
      "Bash(npm run type-check:*)",
      "Bash(curl:*)",
      "Bash(touch:*)",
      "Bash(pkill:*)",
      "Bash(npm run logs:tail:*)",
      "Bash(npm run logs:*)",
      "Bash(kill:*)",
      "Bash(npx tsx:*)",
      "Bash(true)",
      "Bash(cat:*)",
      "Bash(git pull:*)",
      "Bash(psql:*)",
      "Bash(mv:*)",
      "Bash(echo:*)",
      "Bash(npm run test:email:*)",
      "Bash(npm run dev-tools:*)",
      "Bash(npm --version)",
      "Bash(brew:*)",
      "Bash(git stash:*)",
      "Bash(git checkout:*)",
      "Bash(cp:*)",
      "Bash(npm run stop:*)",
      "Bash(git clean:*)",
      "Bash(./scripts/railway-dashboard-deploy.sh:*)",
      "Bash(railway status:*)",
      "Bash(railway up:*)",
      "Bash(railway logs:*)",
      "Bash(railway domain:*)",
      "Bash(./scripts/update-railway-oauth.sh:*)",
      "Bash(git rm:*)",
      "Bash(./scripts/railway-update-complete.sh:*)",
      "WebFetch(domain:docs.railway.com)",
      "Bash(cd ../desktop)",
      "Bash(grep -n \"app.on.*ready\\|whenReady\\|createMainWindow()\" src/main/main.ts)",
      "Bash(cd /Users/nileshkumar/gh/article_saver/desktop)",
      "Bash(./scripts/prepare-release.sh)",
      "Bash(npm run dist:*)",
      "Bash(npm ls:*)",
      "Bash(git tag:*)",
      "WebFetch(domain:articlesaver-production.up.railway.app)",
      "Bash(npm run lint)",
      "Bash(npx eslint:*)",
      "Bash(npm run lint:*)",
      "Bash(npm config get:*)",
      "Bash(npm config:*)",
      "WebFetch(domain:github.com)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(./fix-types.sh)",
      "Bash(sed:*)",
      "Bash(npm info:*)",
      "Bash(npm run build:vite:*)",
      "Bash(npm ci:*)",
      "Bash(npm update:*)",
      "Bash(npx vite:*)",
      "Bash(gh run watch:*)",
      "Bash(npm view:*)",
      "Bash(npm search:*)",
      "Bash(npm run build:electron:*)",
      "Bash(npm uninstall:*)",
      "Bash(git describe:*)",
      "Bash(gh run download:*)",
      "Bash(gh api:*)",
      "Bash(gh workflow run:*)",
      "Bash(npm version:*)",
      "Bash(gh release create:*)",
      "Bash(--title \"Article Saver v1.1.0 - Critical Pre-Pocket Shutdown Release\" )",
      "Bash(--notes \"# üö® URGENT: Pocket shuts down July 7, 2025\n\n**Import your Pocket articles NOW before it''s too late!**\n\n## ‚ú® What''s New\n\n### Critical Features\n- ‚úÖ **Full Pocket Import** - Import all your saved articles with progress tracking\n- ‚úÖ **Auto-Update** - Never miss a critical update again\n- ‚úÖ **Cross-Platform** - Works on Windows, macOS, and Linux\n- ‚úÖ **Enterprise Stability** - Production-ready with comprehensive error handling\n\n### Fixed Issues\n- Fixed all CI/CD pipeline problems\n- Resolved Windows icon format errors\n- Fixed Linux package metadata requirements\n- Resolved macOS architecture compatibility issues\n- Fixed npm workspaces conflicts\n\n## üì• Download\n\nDownload the appropriate file for your platform below:\n- **Windows**: `Article-Saver-Setup-*.exe`\n- **macOS**: `Article-Saver-*.dmg`\n- **Linux**: `Article-Saver-*.AppImage` or `.deb`\n\n## üöÄ Important Next Steps\n\n1. Download and install Article Saver\n2. Click ''Import from Pocket'' in Settings\n3. Authenticate with your Pocket account\n4. Wait for import to complete (progress shown in header)\n5. Your articles are now safe!\n\n## üìù Release Notes\n\nSee [CHANGELOG.md](https://github.com/nilukush/article_saver/blob/main/CHANGELOG.md) for detailed changes.\n\n---\n*Built with CI/CD workflow run [#15975139831](https://github.com/nilukush/article_saver/actions/runs/15975139831)*\")",
      "Bash(git reset:*)",
      "Bash(gh release list:*)",
      "Bash(gh release view:*)",
      "Bash(unzip:*)",
      "Bash(gh release upload:*)",
      "Bash(gh release edit:*)",
      "Bash(xattr:*)",
      "Bash(open:*)",
      "Bash(log show:*)",
      "Bash(/Applications/Article\\ Saver.app/Contents/MacOS/Article\\ Saver)",
      "WebFetch(domain:www.npmjs.com)",
      "Bash(npm run build:*)",
      "Bash(NODE_ENV=production electron .)",
      "Bash(NODE_ENV=production npm run dev:electron)",
      "Bash(NODE_ENV=development npm run dev:electron)",
      "Bash(git restore:*)",
      "WebFetch(domain:www.electron.build)",
      "Bash(--title \"v1.1.1 - Critical Auto-Updater Hotfix\" )",
      "Bash(--notes-file /tmp/release-notes-v1.1.1.md )",
      "Bash(--prerelease=false )",
      "Bash(\"/Users/nileshkumar/gh/article_saver/desktop/release/Article Saver-1.1.1.dmg\" )",
      "Bash(\"/Users/nileshkumar/gh/article_saver/desktop/release/Article Saver-1.1.1-arm64.dmg\" )",
      "Bash(\"/Users/nileshkumar/gh/article_saver/desktop/release/Article Saver-1.1.1-mac.zip\" )",
      "Bash(\"/Users/nileshkumar/gh/article_saver/desktop/release/Article Saver-1.1.1-arm64-mac.zip\")",
      "Bash(gh run cancel:*)",
      "Bash(git remote get-url:*)",
      "Bash(NODE_ENV=production npm run build:electron)",
      "Bash(npm run dev:electron:*)",
      "Bash(gh release delete:*)",
      "Bash(--title \"v1.1.1 - Critical Auto-Updater Hotfix\" )",
      "Bash(--notes-file /tmp/release-notes-v1.1.1-final.md )",
      "Bash(--latest )",
      "Bash(desktop/release/*1.1.1*.dmg)",
      "Bash(desktop/release/*1.1.1*.zip)",
      "Bash(hdiutil detach:*)",
      "Bash(npm run install:all:*)",
      "Bash(railway link:*)",
      "WebFetch(domain:railway.app)",
      "Bash(railway service:*)",
      "Bash(railway list:*)",
      "Bash(railway whoami:*)",
      "Bash(railway variables:*)",
      "Bash(convert:*)",
      "WebFetch(domain:docs.github.com)",
      "WebFetch(domain:peps.python.org)",
      "Bash(./cleanup-codebase.sh:*)",
      "Bash(tree:*)",
      "Bash(npm run:*)",
      "WebFetch(domain:umami.is)",
      "Bash(for:*)",
      "Bash(do if [[ -f \"$file\" ]])",
      "Bash(then echo \"$file exists\")",
      "Bash(fi)",
      "Bash(./fix-screenshots-now.sh:*)",
      "Bash(do echo \"$i\")"
    ],
    "deny": []
  }
}