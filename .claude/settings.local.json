{
  "permissions": {
    "allow": [
      "Bash(git push:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(chmod:*)",
      "Bash(node:*)",
      "Bash(mkdir:*)",
      "Bash(for size in 16 32 64 128 256 512 1024)",
      "Bash(do)",
      "Bash(magick:*)",
      "Bash(done)",
      "Bash(# Create Windows .ico file with multiple sizes\nmagick resources/icons/16x16.png resources/icons/32x32.png resources/icons/64x64.png resources/icons/128x128.png resources/icons/256x256.png resources/icon.ico)",
      "Bash(# Create iconset directory for macOS\nmkdir -p resources/icon.iconset\n\n# Copy and rename files according to Apple's requirements\ncp resources/icons/16x16.png resources/icon.iconset/icon_16x16.png\ncp resources/icons/32x32.png resources/icon.iconset/icon_16x16@2x.png\ncp resources/icons/32x32.png resources/icon.iconset/icon_32x32.png\ncp resources/icons/64x64.png resources/icon.iconset/icon_32x32@2x.png\ncp resources/icons/128x128.png resources/icon.iconset/icon_128x128.png\ncp resources/icons/256x256.png resources/icon.iconset/icon_128x128@2x.png\ncp resources/icons/256x256.png resources/icon.iconset/icon_256x256.png\ncp resources/icons/512x512.png resources/icon.iconset/icon_256x256@2x.png\ncp resources/icons/512x512.png resources/icon.iconset/icon_512x512.png\ncp resources/icons/1024x1024.png resources/icon.iconset/icon_512x512@2x.png\n\n# Create the icns file\niconutil -c icns resources/icon.iconset -o resources/icon.icns\n\n# Clean up\nrm -rf resources/icon.iconset)",
      "Bash(# Create a 512x512 PNG for GitHub OAuth\ncp resources/icons/512x512.png resources/github-oauth-logo.png\n\n# Also create one in public directory for easy access\ncp resources/icons/512x512.png public/logo-512.png\n\necho \"‚úÖ Icons generated successfully!\"\necho \"üìÅ Icon locations:\"\necho \"  - Windows: resources/icon.ico\"\necho \"  - macOS: resources/icon.icns\"\necho \"  - Linux: resources/icons/256x256.png\"\necho \"  - GitHub OAuth: resources/github-oauth-logo.png\")",
      "Bash(npm install:*)",
      "Bash(rm:*)",
      "Bash(rg:*)",
      "Bash(npx prisma:*)",
      "Bash(npx tsc:*)",
      "Bash(npx ts-node:*)",
      "Bash(npm run type-check:*)",
      "Bash(curl:*)",
      "Bash(touch:*)",
      "Bash(pkill:*)",
      "Bash(npm run logs:tail:*)",
      "Bash(npm run logs:*)",
      "Bash(kill:*)",
      "Bash(npx tsx:*)",
      "Bash(true)",
      "Bash(cat:*)",
      "Bash(git pull:*)",
      "Bash(psql:*)",
      "Bash(mv:*)",
      "Bash(echo:*)",
      "Bash(npm run test:email:*)",
      "Bash(npm run dev-tools:*)",
      "Bash(npm --version)",
      "Bash(brew:*)",
      "Bash(git stash:*)",
      "Bash(git checkout:*)",
      "Bash(cp:*)",
      "Bash(npm run stop:*)",
      "Bash(git clean:*)",
      "Bash(./scripts/railway-dashboard-deploy.sh:*)",
      "Bash(railway status:*)",
      "Bash(railway up:*)",
      "Bash(railway logs:*)",
      "Bash(railway domain:*)",
      "Bash(./scripts/update-railway-oauth.sh:*)",
      "Bash(git rm:*)",
      "Bash(./scripts/railway-update-complete.sh:*)",
      "WebFetch(domain:docs.railway.com)",
      "Bash(cd ../desktop)",
      "Bash(grep -n \"app.on.*ready\\|whenReady\\|createMainWindow()\" src/main/main.ts)",
      "Bash(cd /Users/nileshkumar/gh/article_saver/desktop)",
      "Bash(./scripts/prepare-release.sh)",
      "Bash(npm run dist:*)",
      "Bash(npm ls:*)",
      "Bash(git tag:*)",
      "WebFetch(domain:articlesaver-production.up.railway.app)",
      "Bash(npm run lint)",
      "Bash(npx eslint:*)",
      "Bash(npm run lint:*)",
      "Bash(npm config get:*)",
      "Bash(npm config:*)",
      "WebFetch(domain:github.com)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(./fix-types.sh)",
      "Bash(sed:*)",
      "Bash(npm info:*)"
    ],
    "deny": []
  }
}