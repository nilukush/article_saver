name: CI Simple

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18.19.0'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      
      - name: Free maximum disk space
        run: |
          echo "Before cleanup:"
          df -h
          free -m
          
          # Aggressive cleanup
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/local/.ghcup
          sudo apt-get clean
          sudo apt-get autoremove -y
          sudo apt-get autoclean -y
          
          # Docker cleanup
          docker system prune -af
          
          echo "After cleanup:"
          df -h
          free -m
      
      - name: Setup swap
        run: |
          sudo swapoff -a
          sudo fallocate -l 12G /mnt/swapfile
          sudo chmod 600 /mnt/swapfile
          sudo mkswap /mnt/swapfile
          sudo swapon /mnt/swapfile
          sudo swapon --show
          free -m
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install dependencies
        env:
          NODE_OPTIONS: --max-old-space-size=1536
        run: |
          # Show system resources
          echo "=== System Resources ==="
          free -m
          df -h
          nproc
          
          # Configure npm for minimal memory usage
          npm config set audit false
          npm config set fund false
          npm config set progress false
          npm config set prefer-offline true
          npm config set fetch-retries 2
          
          # Clean install
          echo "=== Starting npm install ==="
          npm install --no-audit --no-fund --no-optional
          
          echo "=== Install completed ==="
          free -m
      
      - name: Lint and Type Check
        run: |
          cd backend
          echo "=== Backend checks ==="
          npm run lint || echo "Backend lint has warnings"
          npm run type-check || echo "Backend type check has issues"
          
          cd ../desktop
          echo "=== Desktop checks ==="
          npm run lint || echo "Desktop lint has warnings"
          npm run type-check || echo "Desktop type check has issues"